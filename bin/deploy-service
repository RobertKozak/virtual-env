#!/bin/bash

# set variables
# -------------

BRANCH=${1,,}
BRANCH=${BRANCH/refs\/heads\//}
SERVICE_NAME=$2
VAULT_PASSWORD=$3
CR_CLUSTER=c4-dev
IMAGE_TAG=latest

PROPERTIES_TEMPLATE="/aws/workspace/${SERVICE_NAME}/config/${SERVICE_NAME}.properties"
PROPERTIES_DESTINATION="/aws/service/files/microservice.properties"
VALUES_DESTINATION="/aws/service/values.yaml"

HASH_POLICY=""
MAGLEV=""
if [[ "$SERVICE_NAME" == "eventappng" ]]; then
  HASH_POLICY="lbHash:\\n          hashPolicies:\\n          - cookie:\\n              name: AWSALB\\n              path: / \\n              ttl: 3600s"
  MAGLEV="loadBalancerConfig:\\n    maglev: {}"
fi

# check for vaild args
# --------------------
if [[ -z "$BRANCH" ]] || [[ -z "$SERVICE_NAME" ]] || [[ -z "$VAULT_PASSWORD" ]]; then
   echo -e "\nUsage:\n    deploy-service <branch-name> <service-name> <vault_password>"
   exit 1
fi

env
echo "BRANCH: $BRANCH"
echo "SERVICE: $SERVICE_NAME"

# check to see if virtual environment is ready
# --------------------------------------------

COUNT=0
printf "Checking to see if virtual environment is ready."
while true; do
  if [[ ! -z $(kubectl get namespace/$BRANCH --ignore-not-found) ]]; then
    printf "ready\n"
    break
  else
    sleep 10
    printf "."
    ((COUNT++))
    if [[ $COUNT -gt 10 ]]; then
      printf "\nWARNING: Virtual Environment not ready yet.\n"
      exit 0;
    fi
   fi
done


# Render properties & helmchart files
# -----------------------------------

mkdir -p /aws/service/files

cd ansible
echo "$VAULT_PASSWORD" > /root/.vault-password

echo "Running ansible with ${CR_CLUSTER} inventory to render properties file"
ansible-playbook -i ${CR_CLUSTER} \
    --vault-password-file /root/.vault-password \
    plays/generate_properties.yml \
    -e properties_template="${PROPERTIES_TEMPLATE}" \
    -e properties_destination="${PROPERTIES_DESTINATION}"

echo "Running ansible with ${CR_CLUSTER} inventory to render values.yaml file for Helm chart"
ansible-playbook -i ${CR_CLUSTER} \
    --vault-password-file /root/.vault-password \
    plays/helm-charts-eks.yml  \
    -e cr_label="${SERVICE_NAME}" \
    -e values_destination="${VALUES_DESTINATION}"

rm /root/.vault-password
cd ..

sed -i -e "s|{{ BRANCH }}|${BRANCH}|g" "/aws/service/templates/docker-secret.yml"

# Deploy service
# --------------

echo "Deploy microservice: $SERVICE_NAME"
helm template \
  ${SERVICE_NAME} \
  "/aws/service" \
  --namespace ${BRANCH} \
  --set image.tag=${IMAGE_TAG} \
  --set app_name=${SERVICE_NAME} \
  --values ${VALUES_DESTINATION} \
  --dry-run | kubectl apply --namespace ${BRANCH} -f -

sed -e "s|{{ SERVICE_NAME }}|${SERVICE_NAME}|g" -e "s|{{ BRANCH }}|${BRANCH}|g" -e "s|{{ MAGLEV }}|${MAGLEV}|g" "/aws/service/virtualservice/upstream.yml" | kubectl apply -f -
sed -e "s|{{ SERVICE_NAME }}|${SERVICE_NAME}|g" -e "s|{{ BRANCH }}|${BRANCH}|g" -e "s|{{ hash_policy }}|${HASH_POLICY}|g" "/aws/service/virtualservice/virtualservice.yml" | kubectl apply -f -

kubectl rollout status deployment ${SERVICE_NAME} --namespace ${BRANCH}

